Why are templates helpful?

For several reasons, such as:

Keeping server logic (in this case JavaScript) separate from markup (HTML), making it easier to modify or debug one without affecting the other
Separating different parts of an HTML document into different files, helping keep the length of HTML files short and manageable

Embedded JavaScript templates (EJS) can be used as an alternative template engine.

view this walkthough -> https://www.digitalocean.com/community/tutorials/how-to-use-ejs-to-template-your-node-application

Nodemon is a utility that will monitor for any changes in our source code and automatically restart our server. Perfect for development. TO INSTALL in terminal as a development dependency.->>  npm install --save-dev nodemon
next run our application with nodemon by enerting this in the terminal. ->> ./node_modules/.bin/nodemon -L express_server.js
From now on, start the server by running npm start

bootstrap for styling ->> https://getbootstrap.com/docs/4.0/components/buttons/ 

cookie installation ->> https://www.npmjs.com/package/cookie-parser
cookie documentation ->> https://github.com/expressjs/cookie-parser
interminal $ npm install cookie-parser
API
const express = require('express')
const cookieParser = require('cookie-parser')
const app = express()
app.use(cookieParser())
 
res.cookie/ res.clearCookie ->> https://expressjs.com/en/api.html


 <% if (user) { %>
            <form method="POST" action="/logout" class="form-inline">
              <label> Logged in as: <%= user.email %> </label>
              <button type="submit" class="btn btn-outline-info">Logout</button>
            </form>
          <% }  else { %> 
              <a href="/login"><button type="submit" class="btn btn-info" data-toggle="popover" title="Hello again">Login</button></a>
              <a href="/register"><button type="submit" class="btn btn-info" data-toggle="popover" title="Welcome">Register</button></a>
          <% } %>  

before refactor
app.post("/login", (req, res) => {
  const email = req.body.email;
  const password = req.body.password;

//   if (userDatabase[email]) {
//     if (userDatabase[email].password === password) {
//       res.cookie('email', email);
//       return res.redirect("/urls");
//     }
//     console.log('incorrect password');
//   return res.redirect("/urls");
//   }
//   console.log("cannot find email");
//   return res.redirect("/urls");
// });